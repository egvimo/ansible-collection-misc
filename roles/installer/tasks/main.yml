---
- block:
    - name: Prepare packages lists
      set_fact:
        _packages: "{{ installer_packages.split(',') if installer_packages is string else installer_packages | default([]) }}"
        _packages_custom: []
        _packages_apt: "{{ installer_packages_apt.split(',') if installer_packages_apt is string else installer_packages_apt | default([]) }}"
        _packages_scoop: "{{ installer_packages_scoop.split(',') if installer_packages_scoop is string else installer_packages_scoop | default([]) }}"

    - name: Sort packages
      include_tasks:
        file: sort_package.yml
        apply:
          tags: installer
      loop: "{{ _packages }}"
      loop_control:
        loop_var: _package

    - name: Install custom packages
      include_tasks:
        file: "{{ _package }}/{{ ansible_os_family | lower }}.yml"
        apply:
          tags: installer
      loop: "{{ _packages_custom }}"
      loop_control:
        loop_var: _package
      when: _packages_custom | length

    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: yes
      become: true
      when: _packages_apt | length

    - name: "Install via apt"
      ansible.builtin.apt:
        name: "{{ _package }}"
        state: present
      loop: "{{ _packages_apt }}"
      loop_control:
        loop_var: _package
      become: true
      when: _packages_apt | length

    - name: Prepare Scoop buckets
      community.windows.win_scoop_bucket:
        name: "{{ item }}"
        state: present
      loop:
        - extras
        - java
      when: _packages_scoop | length

    - name: "Install via Scoop"
      community.windows.win_scoop:
        name: "{{ _package }}"
        state: present
      loop: "{{ _packages_scoop }}"
      loop_control:
        loop_var: _package
      when: _packages_scoop | length

  tags: installer
